
name: Build, Push, and Deploy to EC2

on:
  push:
    paths:
      - 'user/login/**'
    branches: ["test"]
  pull_request:
    paths:
      - 'user/login/**'
    branches: ["QA", "main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Checkout del repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # Paso 2: Login en Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Paso 3: Construir la imagen Docker usando los secrets
    - name: Build Docker image
      run: |
        docker build catalog/createProductService/. --file catalog/createProductService/Dockerfile \
          --build-arg MONGO_URI=${{ secrets.MONGO_URI }} \
          --build-arg DB_NAME=${{ secrets.DB_NAME }} \
          --build-arg SERVER_PORT=${{ secrets.SERVER_PORT }} \
          -t ${{ secrets.DOCKER_USERNAME }}/create-product-service:latest .

    # Paso 4: Subir la imagen a Docker Hub
    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/create-product-service:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Conectar al servidor EC2 usando SSH
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          echo "Deteniendo y eliminando contenedor previo..."
          docker stop create-product-service || true
          docker rm create-product-service || true
          
          echo "Actualizando imagen desde Docker Hub..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/create-product-service:latest
          
          echo "Ejecutando nuevo contenedor en el puerto 80..."
          docker run -d \
            --name create-product-service \
            -p 80:${{ secrets.SERVER_PORT }} \
            -e MONGO_URI=${{ secrets.MONGO_URI }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e SERVER_PORT=${{ secrets.SERVER_PORT }} \
            ${{ secrets.DOCKER_USERNAME }}/create-product-service:latest
