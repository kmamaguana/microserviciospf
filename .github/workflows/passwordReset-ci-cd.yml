name: Docker Image CI/CD for Password Reset Service

on:
  push:
    paths:
      - 'user/passwordReset/**'
    branches: ["test"]
  pull_request:
    paths:
      - 'user/passwordReset/**'
    branches: ["QA", "main"]

jobs:
  build-and-push:
    name: Build, Package, and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build .jar file
        run: mvn clean install -f user/passwordReset/pom.xml
        env: 
          APP_NAME: ${{ secrets.APP_NAME_PASSWORD_RESET }}
          SERVER_PORT: ${{ secrets.SERVER_PORT_PASSWORD_RESET }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DRIVER: ${{ secrets.DB_DRIVER }}
          DB_CONNECTION_TIMEOUT: ${{ secrets.DB_CONNECTION_TIMEOUT }}
          DB_MAX_POOL_SIZE: ${{ secrets.DB_MAX_POOL_SIZE }}
          JPA_DDL_AUTO: ${{ secrets.JPA_DDL_AUTO }}
          JPA_SHOW_SQL: ${{ secrets.JPA_SHOW_SQL }}
          JPA_OPEN_IN_VIEW: ${{ secrets.JPA_OPEN_IN_VIEW }}
          JPA_DATABASE_PLATFORM: ${{ secrets.JPA_DATABASE_PLATFORM }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
          DOMINIO_URL: ${{ secrets.DOMINIO_URL }}

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build user/passwordReset/. --file user/passwordReset/Dockerfile \
            --tag ${{ secrets.DOCKER_USERNAME }}/password-reset-service:${{ github.run_number }} \
            --tag ${{ secrets.DOCKER_USERNAME }}/password-reset-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/password-reset-service:${{ github.run_number }}
          docker push ${{ secrets.DOCKER_USERNAME }}/password-reset-service:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST_PASSWORD_RESET }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            if ! command -v docker &> /dev/null; then
              sudo yum update -y
              sudo yum install -y docker
              sudo service docker start
              sudo usermod -a -G docker ec2-user
            fi

            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/password-reset-service:latest

            sudo docker stop password-reset-service || true
            sudo docker rm password-reset-service || true

            sudo docker run -d --name password-reset-service -p 81:${{ secrets.SERVER_PORT_PASSWORD_RESET }} \
              -e APP_NAME=${{ secrets.APP_NAME_PASSWORD_RESET }} \
              -e SERVER_PORT=${{ secrets.SERVER_PORT_PASSWORD_RESET }} \
              -e DB_URL=${{ secrets.DB_URL }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_DRIVER=${{ secrets.DB_DRIVER }} \
              -e DB_CONNECTION_TIMEOUT=${{ secrets.DB_CONNECTION_TIMEOUT }} \
              -e DB_MAX_POOL_SIZE=${{ secrets.DB_MAX_POOL_SIZE }} \
              -e JPA_DDL_AUTO=${{ secrets.JPA_DDL_AUTO }} \
              -e JPA_SHOW_SQL=${{ secrets.JPA_SHOW_SQL }} \
              -e JPA_OPEN_IN_VIEW=${{ secrets.JPA_OPEN_IN_VIEW }} \
              -e JPA_DATABASE_PLATFORM=${{ secrets.JPA_DATABASE_PLATFORM }} \
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
              -e JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }} \
              -e DOMINIO_URL=${{ secrets.DOMINIO_URL }} \
              ${{ secrets.DOCKER_USERNAME }}/password-reset-service:latest

            if sudo docker ps -f name=password-reset-service | grep password-reset-service; then
              echo "==> Container is running successfully"
            else
              echo "==> Container failed to start. Check logs."
              sudo docker logs password-reset-service
              exit 1
            fi
